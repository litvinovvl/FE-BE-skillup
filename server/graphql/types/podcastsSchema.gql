scalar DateTime
scalar Interval
scalar Upload

type File {
  id: ID!
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
}

type Podcast {
  id: Int!
  author: Author
  title: String!
  description: String
  label: Label
  genre: Genre
  bpm: Int
  duration: Interval
  thumbnail: String
  release_date: DateTime
}

type Query {
  getPodcasts: [Podcast!]
}

input PodcastInput {
  author: Int!
  title: String!
  description: String
  label: Int
  genre: Int
  bpm: Int
  duration: Int
  thumbnail: Upload
  date: DateTime
}

type Mutation {
  addPodcast (input: PodcastInput!): Podcast!
}

input RemovePodcastInput {
  id: Int!
}

type RemovePodcastOutput {
  id: Int!
}

type Mutation {
  removePodcast (input: RemovePodcastInput!): RemovePodcastOutput
}
